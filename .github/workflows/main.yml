name: Project Deployment Pipeline

on:
  push:
    branches:
      - main

env:
  DETA_PROJECT: daq-assignment
  PROJECT_NAME: KU-Travel

jobs:
  build_serverside:
    name: Build Serverside
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate server stub
        run: |
          npm ci
          npm run gen-server
          rm -rf node_modules
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_serverside_artifacts
          path: .
  build_clientside:
    name: Build Clientside
    runs-on: ubuntu-latest
    steps:
      - name: Download serverside artifact
        uses: actions/download-artifact@v3
        with:
          name: build_serverside_artifacts
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Go to clientside directory
        run: cd clientside
      - name: Build clientside package
        run: |
          npm ci
          npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: completed_artifacts
          path: .
  deploy:
    name: Deploy project
    runs-on: ubuntu-latest
    needs: [build_serverside, build_clientside]
    steps:
      - name: Download completed artifact
        uses: actions/download-artifact@v3
        with:
          name: completed_artifacts
      - name: Install Deta CLI
        run: curl -fsSL https://get.deta.dev/cli.sh | sh
      - name: Clone Micro Metadata
        shell: bash
        run: |
          export DETA_ACCESS_TOKEN=${{ secrets.DETA_ACCESS_TOKEN }}
          ~/.deta/bin/deta clone --name ${{ env.PROJECT_NAME }} --project ${{ env.DETA_PROJECT }} tmp/
          cp -r tmp/.deta .
          rm -rf tmp
      - name: Deploy to Deta
        run: |
          export DETA_ACCESS_TOKEN=${{ secrets.DETA_ACCESS_TOKEN }}
          ~/.deta/bin/deta deploy
          ~/.deta/bin/deta visor enable
      - name: Set environment variables
        shell: bash
        run: |
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_PASSWD=${{ secrets.DB_PASSWD }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo AQICN_TOKEN=${{ secrets.AQICN_TOKEN }} >> .env
          export DETA_ACCESS_TOKEN=${{ secrets.DETA_ACCESS_TOKEN }}
          ~/.deta/bin/deta update -e .env
