name: Insert data to database

on:
  schedule:
    # Runs "every 1 hour" (see https://crontab.guru)
    - cron: '0 * * * *'
  workflow_dispatch:

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWD: ${{ secrets.DB_PASSWD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  build:
    name: Build project for inserting data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate server stub
        run: |
          npm i
          npm run gen-server
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: project_package
          path: .
  open-meteo:
    name: fetch Open Meteo data
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: project_package
          path: .
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Fetch and save data to MySQL
        run: python cron_tasks.py weather_open_meteo
  aqicn:
    name: fetch Aqicn data
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: project_package
          path: .
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Fetch and save data to MySQL
        run: python cron_tasks.py pm25_aqicn
  iqair:
    name: fetch IQAir data
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: project_package
          path: .
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Fetch and save data to MySQL
        run: python cron_tasks.py pmiqair
