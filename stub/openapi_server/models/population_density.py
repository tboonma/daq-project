# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class PopulationDensity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp=None, amount=None):  # noqa: E501
        """PopulationDensity - a model defined in OpenAPI

        :param timestamp: The timestamp of this PopulationDensity.  # noqa: E501
        :type timestamp: str
        :param amount: The amount of this PopulationDensity.  # noqa: E501
        :type amount: int
        """
        self.openapi_types = {
            'timestamp': str,
            'amount': int
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'amount': 'amount'
        }

        self._timestamp = timestamp
        self._amount = amount

    @classmethod
    def from_dict(cls, dikt) -> 'PopulationDensity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PopulationDensity of this PopulationDensity.  # noqa: E501
        :rtype: PopulationDensity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this PopulationDensity.


        :return: The timestamp of this PopulationDensity.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this PopulationDensity.


        :param timestamp: The timestamp of this PopulationDensity.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def amount(self):
        """Gets the amount of this PopulationDensity.


        :return: The amount of this PopulationDensity.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this PopulationDensity.


        :param amount: The amount of this PopulationDensity.
        :type amount: int
        """

        self._amount = amount
